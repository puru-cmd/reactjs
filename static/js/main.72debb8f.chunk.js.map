{"version":3,"sources":["popup.js","searchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","props","className","onClick","handleClose","content","SearchBar","keyword","setKeyword","style","width","background","border","padding","value","placeholder","onChange","e","target","App","useState","isOpen","setIsOpen","input","setInput","togglePopup","updateInput","a","name","setName","src","type","alt","href","TextField","label","colSpan","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAciBA,EAXH,SAAAC,GACV,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAaC,QAASF,EAAMG,cAC3CH,EAAMI,cCOFC,EAbG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,WAE1B,OACE,uBACCC,MAHgB,CAACC,MAAM,QAAQC,WAAW,UAAWC,OAAO,OAAQC,QAAQ,UAK5EC,MAAOP,EACPQ,YAAa,yCACbC,SAAU,SAACC,GAAD,OAAOT,EAAWS,EAAEC,OAAOJ,SAHjC,Y,QC6IMK,MA7If,WAEE,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAClBH,GAAWD,IAGPK,EAAW,uCAAG,WAAOH,GAAP,SAAAI,EAAA,sDAClBH,EAASD,GADS,2CAAH,sDAIlB,EAAwBH,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAEC,OACE,kCAEE,6BACE,6BACE,qBAAK3B,UAAU,aAAf,SACE,gCACE,+BAEE,6BACE,qBAAKA,UAAU,SAAf,SAAwB,qBAAK4B,IAAI,kBAGnC,6BACE,qBAAK5B,UAAU,cAAf,SACA,cAAC,EAAD,CACEqB,MAAOA,EACPP,SAAUU,QAKd,6BACE,qBAAKxB,UAAU,cAAf,SACA,uBACI6B,KAAK,SACLjB,MAAM,aACNX,QAASsB,mBAWzB,6BACE,sBAAKvB,UAAU,aAAf,UACE,qBAAK4B,IAAM,kBAAkBE,IAAM,UACnC,qBAAK9B,UAAU,eAAf,SACE,uDAEF,qBAAKA,UAAU,eAAf,SACE,8EAKN,6BACE,yBAGDmB,GAAU,cAAC,EAAD,CACXhB,QAAS,qCACT,qBAAKH,UAAU,MAAf,2GACA,uBACA,uBACE,sBAAKA,UAAU,OAAf,sCAA+C,mBAAG+B,KAAK,GAAR,wBAC/C,+CACA,uBAEA,kCACE,+BACE,6BACE,cAACC,EAAA,EAAD,CACEpB,MAAOc,EACPO,MAAM,aACNnB,SAAU,SAACC,GACXY,EAAQZ,EAAEC,OAAOJ,YAIrB,6BACE,cAACoB,EAAA,EAAD,CACEpB,MAAOc,EACPO,MAAM,YACNnB,SAAU,SAACC,GACXY,EAAQZ,EAAEC,OAAOJ,eAMvB,6BACC,oBAAIsB,QAAQ,IAAZ,SAAgB,cAACF,EAAA,EAAD,CACbpB,MAAOc,EACPO,MAAM,QACNnB,SAAU,SAACC,GACXY,EAAQZ,EAAEC,OAAOJ,cAKrB,6BACC,oBAAIsB,QAAQ,IAAZ,SAAgB,cAACF,EAAA,EAAD,CACbpB,MAAOc,EACPO,MAAM,WACNnB,SAAU,SAACC,GACXY,EAAQZ,EAAEC,OAAOJ,cAKrB,6BACC,oBAAIsB,QAAQ,IAAZ,SAAgB,cAACF,EAAA,EAAD,CACbpB,MAAOc,EACPO,MAAM,mBACNnB,SAAU,SAACC,GACXY,EAAQZ,EAAEC,OAAOJ,iBAKvB,qBAAKZ,UAAU,SAAf,+BAEFE,YAAaqB,QC/HJY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72debb8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './popup.css';\r\n\r\nconst Popup = props => {\r\n    return (\r\n      <div className=\"popup-box\">\r\n        <div className=\"box\">\r\n          <span className=\"close-icon\" onClick={props.handleClose}></span>\r\n          {props.content}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n   \r\n  export default Popup;","import React from 'react';\r\n\r\nconst SearchBar = ({keyword,setKeyword}) => {\r\n  const BarStyling = {width:\"20rem\",background:\"#F2F1F9\", border:\"none\", padding:\"0.5rem\"};\r\n  return (\r\n    <input \r\n     style={BarStyling}\r\n     key=\"random1\"\r\n     value={keyword}\r\n     placeholder={\"search for your favorite groups in ATG\"}\r\n     onChange={(e) => setKeyword(e.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchBar","import {useState} from 'react'; \nimport './App.css';\nimport Popup from './popup';\nimport SearchBar from './searchBar';\nimport TextField from \"@material-ui/core/TextField\";\n\n\nfunction App() {\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [input, setInput] = useState('');\n \n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n\n  const updateInput = async (input) => {\n    setInput(input);\n }\n\n const [name, setName] = useState(\"\");\n\n  return (\n    <table>\n\n      <tr>\n        <th>\n          <div className='rectangle1'>\n            <table>\n              <tr>\n\n                <th>\n                  <div className='whole1'><img src='whole.png'/></div>\n                </th>\n\n                <th>\n                  <div className='rectangle11'>\n                  <SearchBar \n                    input={input} \n                    onChange={updateInput}\n                  />\n                  </div>\n                </th>\n\n                <th>\n                  <div className='rectangle12'>\n                  <input\n                      type=\"button\"\n                      value=\"It's free!\"\n                      onClick={togglePopup}\n                    />\n                  </div>\n                </th>\n\n              </tr>\n            </table>\n          </div>\n        </th>\n      </tr>\n\n      <tr>\n        <div className='rectangle2'>\n          <img src = 'Rectangle 2.png' alt = 'Error'/>\n          <div className='textOnimage1'>\n            <p>Computer Engineering</p>\n          </div>\n          <div className='textOnimage2'>\n            <p>142,765 Computer Engineers follow this</p>\n          </div>\n        </div>\n      </tr>\n\n      <tr>\n        <hr></hr>\n      </tr>\n\n      {isOpen && <Popup\n      content={<>\n      <div className='top'>Let's learn,share & inspire each other with our passion for computer engineering. Sign up now</div>\n      <br></br>\n      <br></br>\n        <div className='link'>Already have an account? <a href=''>Sign In</a></div>\n        <b>Create Account</b>\n        <br></br>\n        \n        <table>\n          <tr>\n            <th>\n              <TextField\n                value={name}\n                label=\"First Name\"\n                onChange={(e) => {\n                setName(e.target.value);\n                }}\n              />\n            </th>\n            <th>\n              <TextField\n                value={name}\n                label=\"Last Name\"\n                onChange={(e) => {\n                setName(e.target.value);\n                }}\n              />\n            </th>\n          </tr>\n\n          <tr>\n           <td colSpan='2'><TextField\n              value={name}\n              label=\"Email\"\n              onChange={(e) => {\n              setName(e.target.value);\n              }}\n            /></td>\n          </tr>\n          \n          <tr>\n           <td colSpan='2'><TextField\n              value={name}\n              label=\"password\"\n              onChange={(e) => {\n              setName(e.target.value);\n              }}\n            /></td>\n          </tr>\n\n          <tr>\n           <td colSpan='2'><TextField\n              value={name}\n              label=\"confirm password\"\n              onChange={(e) => {\n              setName(e.target.value);\n              }}\n            /></td>\n          </tr>\n        </table>\n        <div className='submit'>Create Account</div>\n      </>}\n      handleClose={togglePopup}\n      />}\n    </table>\n\n  \n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}